# CPU-only version - Use Python 3.9 without CUDA
FROM python:3.9-slim

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    CUDA_VISIBLE_DEVICES=""

# Install system dependencies and PyTorch in single layer
RUN apt-get update && apt-get install -y --no-install-recommends \
    ffmpeg \
    libsndfile1 \
    git \
    wget \
    curl \
    ca-certificates \
    build-essential \
    && pip install --no-cache-dir torch torchaudio --index-url https://download.pytorch.org/whl/cpu \
    && apt-get remove -y build-essential \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

# Set working directory
WORKDIR /app

# Copy minimal requirements for better Docker layer caching
COPY requirements-docker.txt ./

# Install Python dependencies (excluding GPU-specific packages)
RUN pip install --no-cache-dir -r requirements-docker.txt \
    && rm -rf /tmp/* /root/.cache/pip/*

# Create directories for the application
RUN mkdir -p /app/speakers \
    && mkdir -p /app/output \
    && mkdir -p /app/transcription_output \
    && mkdir -p /app/pretrained_models

# Copy the application code
COPY ../ .

# Create a non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser \
    && chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Create .env template file
RUN echo "# Copy this file to .env and fill in your tokens" > .env.template \
    && echo "HUGGING_FACE_ACCESS_TOKEN=your_hugging_face_token_here" >> .env.template

# Expose port for potential web interface
EXPOSE 8000

# Set default command
CMD ["python", "--version"]

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python -c "import torch, speechbrain, whisper, pyannote.audio; print('CPU version working')" || exit 1

# Labels for metadata
LABEL maintainer="Speaker-Profiles"
LABEL description="Automatic Speaker Recognition and Profiling System"
LABEL version="1.0-cpu"
LABEL org.opencontainers.image.source="https://github.com/JustinTheGreat/Speaker-Profiles"
LABEL org.opencontainers.image.description="AI-powered speaker identification and transcription system"
LABEL org.opencontainers.image.licenses="MIT"

# Environment variables for model caching
ENV TRANSFORMERS_CACHE=/app/pretrained_models/transformers
ENV HF_HOME=/app/pretrained_models/huggingface
ENV SPEECHBRAIN_CACHE=/app/pretrained_models/speechbrain